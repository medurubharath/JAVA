 Declare and implement a class to represent a list of integers, called
IntList. Use an array of integers of size 100 to store the values in the list.
Use an integer variable named num to store the number of elements currently in
the list.  
 
Include the following functions in your class:
• a no-argument constructor that sets up an empty list.
• a void function add(x) that adds a new value, x, to the end of the list. If
adding the element would exceed the list’s capacity, this function should
output an error message.
• a function sort() that rearranges the items in the list so that they are in
ascending order. You may use any algorithm to sort the list.
• A function median() that returns the median value of the list of integers. If
the values are in order from smallest to largest, the median is the middle
value. If the list contains an even number of values, the median is the average
of the two middle values. For example, if the list contains{3,5,8,4,9,6,7} the
median is 6. If the list contains {6,7,8,9,1,2,3,4} the median is 5. If the list
contains {7,8,9,10,1,2,3,4} the median is 5.5


import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
            int a[] =  {7,7,3,7,7,1};
            int re = countV(a,6,7);
            System.out.println("value is "+re);
        }
        public static int countV(int []arr,int n,int val)
        {
            if( (n-1) == 0)
            {
                if( arr[n-1] == val)
                    return 1;
                return 0;
            }
            if( arr[n-1] == val)
                return 1+countV(arr, n - 1, val);
            else
                return countV(arr, n - 1, val);
        }
    }
